% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/hoeffding-tree.R
\name{hoeffding_trees}
\alias{hoeffding_trees}
\title{Hoeffding trees}
\usage{
hoeffding_trees(
  formula = NULL,
  data = NULL,
  confidence_factor = 0.95,
  sample_size = 10,
  max_samples = 5000,
  min_samples = 100,
  info_gain = FALSE,
  batch_mode = FALSE,
  numeric_split_strategy = c("binary", "domingos"),
  num_breaks = 10,
  observations_before_binning = 100,
  x = NULL,
  y = NULL
)
}
\arguments{
\item{formula}{A formula.}

\item{data}{A data.frame.}

\item{confidence_factor}{Confidence before splitting (between 0 and 1).}

\item{sample_size}{Number of passes to take over the dataset.}

\item{max_samples}{Maximum number of samples before splitting.}

\item{min_samples}{Minimum number of samples before splitting.}

\item{info_gain}{Logical.
If set, information gain is used
instead of Gini impurity for calculating Hoeffding bounds.}

\item{batch_mode}{Logical.
If true, samples will be considered in batch instead of as a stream.
This generally results in better trees
but at the cost of memory usage and runtime.}

\item{numeric_split_strategy}{The splitting strategy to use for numeric features.}

\item{num_breaks}{If the "domingos" split strategy is used,
this specifies the number of bins for each numeric split.}

\item{observations_before_binning}{If the "domingos" split strategy is used,
this specifies the number of samples observed before binning is performed.}

\item{x}{Design matrix.}

\item{y}{Response matrix.}
}
\value{
An object of class \code{baritsu_ht}.
}
\description{
A wrapper around \code{\link[mlpack:hoeffding_tree]{mlpack::hoeffding_tree()}} that allows passing a formula.
}
\seealso{
\code{\link[mlpack:hoeffding_tree]{mlpack::hoeffding_tree()}} \code{\link[=predict.baritsu_ht]{predict.baritsu_ht()}}
}
