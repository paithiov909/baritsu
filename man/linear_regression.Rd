% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/linear-reg.R
\name{linear_regression}
\alias{linear_regression}
\title{Linear regression}
\usage{
linear_regression(
  formula = NULL,
  data = NULL,
  lambda1 = 0,
  lambda2 = 0,
  no_intercept = FALSE,
  no_normalize = FALSE,
  use_cholesky = FALSE,
  x = NULL,
  y = NULL
)
}
\arguments{
\item{formula}{A formula.}

\item{data}{A data.frame.}

\item{lambda1}{Regularization parameter for L1-norm penalty.}

\item{lambda2}{Regularization parameter for L2-norm penalty.}

\item{no_intercept}{Logical; passed to \code{\link[mlpack:lars]{mlpack::lars()}}.}

\item{no_normalize}{Logical; passed to \code{\link[mlpack:lars]{mlpack::lars()}}.}

\item{use_cholesky}{Logical; passed to \code{\link[mlpack:lars]{mlpack::lars()}}.}

\item{x}{Design matrix.}

\item{y}{Response matrix.}
}
\value{
An object of class \code{baritsu_lr}.
}
\description{
A wrapper around \code{\link[mlpack:linear_regression]{mlpack::linear_regression()}} and \code{\link[mlpack:lars]{mlpack::lars()}}
that allows passing a formula.
}
\details{
When the lambda1 is 0, this function
fallbacks to \code{\link[mlpack:linear_regression]{mlpack::linear_regression()}} for performance.
}
\seealso{
\code{\link[mlpack:linear_regression]{mlpack::linear_regression()}} \code{\link[mlpack:lars]{mlpack::lars()}}
\code{\link[=predict.baritsu_lr]{predict.baritsu_lr()}}
}
