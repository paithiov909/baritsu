[{"path":"https://paithiov909.github.io/baritsu/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 baritsu authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://paithiov909.github.io/baritsu/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Akiru Kato. Author, maintainer.","code":""},{"path":"https://paithiov909.github.io/baritsu/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Kato (2024). baritsu: Wrappers Around 'mlpack'. R package version 0.0.0.9001, https://paithiov909.github.io/baritsu/.","code":"@Manual{,   title = {baritsu: Wrappers Around 'mlpack'},   author = {Akiru Kato},   year = {2024},   note = {R package version 0.0.0.9001},   url = {https://paithiov909.github.io/baritsu/}, }"},{"path":"https://paithiov909.github.io/baritsu/index.html","id":"baritsu","dir":"","previous_headings":"","what":"Wrappers Around mlpack","title":"Wrappers Around mlpack","text":"main goal baritsu implement wrappers around mlpack allows formula argument. Also, baritsu provides parsnip engines wrappers, can used tidymodels workflows.","code":""},{"path":"https://paithiov909.github.io/baritsu/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Wrappers Around mlpack","text":"can install development version baritsu GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"paithiov909/baritsu\")"},{"path":"https://paithiov909.github.io/baritsu/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Wrappers Around mlpack","text":"basic example shows solve common problem:","code":"suppressPackageStartupMessages({   require(tidymodels)   require(baritsu) })  data(\"penguins\", package = \"modeldata\")  set.seed(1218) data_split <- initial_split(penguins, strata = species) penguins_train <- training(data_split) penguins_test <- testing(data_split)  rec <-   recipe(     species ~ .,     data = penguins_train   ) |>   step_impute_median(all_numeric_predictors()) |>   step_impute_mode(all_nominal_predictors())  spec <-   decision_tree(     tree_depth = 0,     min_n = 5   ) |>   set_engine(\"baritsu\") |>   set_mode(\"classification\")  translate(spec) #> Decision Tree Model Specification (classification) #>  #> Main Arguments: #>   tree_depth = 0 #>   min_n = 5 #>  #> Computational engine: baritsu  #>  #> Model fit template: #> baritsu::decision_trees(formula = missing_arg(), data = missing_arg(),  #>     x = missing_arg(), y = missing_arg(), tree_depth = 0, min_n = 5)  wf_fit <- workflow() |>   add_recipe(rec) |>   add_model(spec) |>   fit(penguins_train)  pred <- augment(wf_fit, penguins_test) |>   dplyr::select(species, .pred_class)  pred #> # A tibble: 86 × 2 #>    species .pred_class #>    <fct>   <fct>       #>  1 Adelie  Adelie      #>  2 Adelie  Adelie      #>  3 Adelie  Adelie      #>  4 Adelie  Adelie      #>  5 Adelie  Adelie      #>  6 Adelie  Adelie      #>  7 Adelie  Adelie      #>  8 Adelie  Adelie      #>  9 Adelie  Adelie      #> 10 Adelie  Adelie      #> # ℹ 76 more rows  f_meas(pred, truth = species, estimate = .pred_class) #> # A tibble: 1 × 3 #>   .metric .estimator .estimate #>   <chr>   <chr>          <dbl> #> 1 f_meas  macro          0.957"},{"path":"https://paithiov909.github.io/baritsu/reference/baritsu-package.html","id":null,"dir":"Reference","previous_headings":"","what":"baritsu: Wrappers Around 'mlpack' — baritsu-package","title":"baritsu: Wrappers Around 'mlpack' — baritsu-package","text":"collection wrappers around 'mlpack' package allows passing formula argument.","code":""},{"path":[]},{"path":"https://paithiov909.github.io/baritsu/reference/baritsu-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"baritsu: Wrappers Around 'mlpack' — baritsu-package","text":"Maintainer: Akiru Kato paithiov909@gmail.com","code":""},{"path":"https://paithiov909.github.io/baritsu/reference/decision_trees.html","id":null,"dir":"Reference","previous_headings":"","what":"Decision trees — decision_trees","title":"Decision trees — decision_trees","text":"wrapper around mlpack::decision_tree() allows passing formula.","code":""},{"path":"https://paithiov909.github.io/baritsu/reference/decision_trees.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Decision trees — decision_trees","text":"","code":"decision_trees(   formula = NULL,   data = NULL,   tree_depth = 0,   min_n = 20,   minimum_gain_split = 1e-07,   weights = NULL,   x = NULL,   y = NULL )"},{"path":"https://paithiov909.github.io/baritsu/reference/decision_trees.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Decision trees — decision_trees","text":"formula formula. Alternatively, recipe object can passed argument. recipe passed, data ignored. data data.frame. tree_depth Maximum depth tree. min_n Minimum number data points leaf. minimum_gain_split Minimum gain required split internal node. weights Weights observation. x Design matrix. y Response matrix.","code":""},{"path":"https://paithiov909.github.io/baritsu/reference/decision_trees.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Decision trees — decision_trees","text":"object class baritsu_dt.","code":""},{"path":"https://paithiov909.github.io/baritsu/reference/decision_trees.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Decision trees — decision_trees","text":"prevent masking parsnip::decision_tree(), function named decision_trees (plural form!)","code":""},{"path":[]},{"path":"https://paithiov909.github.io/baritsu/reference/details_decision_tree_baritsu.html","id":null,"dir":"Reference","previous_headings":"","what":"Decision trees via baritsu — details_decision_tree_baritsu","title":"Decision trees via baritsu — details_decision_tree_baritsu","text":"mlpack::decision_tree() implementation ID3-style decision tree classification, supports categorical data.","code":""},{"path":"https://paithiov909.github.io/baritsu/reference/details_decision_tree_baritsu.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Decision trees via baritsu — details_decision_tree_baritsu","text":"engine, single mode: classification","code":""},{"path":"https://paithiov909.github.io/baritsu/reference/details_decision_tree_baritsu.html","id":"tuning-parameters","dir":"Reference","previous_headings":"","what":"Tuning Parameters","title":"Decision trees via baritsu — details_decision_tree_baritsu","text":"model 2 tuning parameters: tree_depth: Tree depth (type: integer) min_n: Minimal Node Size (type: integer)","code":""},{"path":"https://paithiov909.github.io/baritsu/reference/details_lars_baritsu.html","id":null,"dir":"Reference","previous_headings":"","what":"Least angle regression — lars","title":"Least angle regression — lars","text":"lars() defines model can predict numeric values predictors using wrapper mlpack::lars(). mlpack::lars() implementation Least Angle Regression (Stagewise/laSso), also known LARS.","code":""},{"path":"https://paithiov909.github.io/baritsu/reference/details_lars_baritsu.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Least angle regression — lars","text":"","code":"lars(   mode = \"regression\",   engine = \"baritsu\",   penalty_L1 = NULL,   penalty_L2 = NULL )"},{"path":"https://paithiov909.github.io/baritsu/reference/details_lars_baritsu.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Least angle regression — lars","text":"mode single character string type model. possible value model \"regression\". engine single character string specifying computational engine use fitting. penalty_L1 Regularization parameter L1-norm penalty. penalty_L2 Regularization parameter L2-norm penalty.","code":""},{"path":"https://paithiov909.github.io/baritsu/reference/details_lars_baritsu.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Least angle regression — lars","text":"model, single mode: regression","code":""},{"path":"https://paithiov909.github.io/baritsu/reference/details_lars_baritsu.html","id":"tuning-parameters","dir":"Reference","previous_headings":"","what":"Tuning Parameters","title":"Least angle regression — lars","text":"model 2 tuning parameters: lambda1 Amount regularization Lasso Penalty (type: double) lambda2 Amount regularization Ridge Penalty (type: double)","code":""},{"path":"https://paithiov909.github.io/baritsu/reference/details_mlp_baritsu.html","id":null,"dir":"Reference","previous_headings":"","what":"Single level neural network via baritsu — details_mlp_baritsu","title":"Single level neural network via baritsu — details_mlp_baritsu","text":"mlpack::perceptron() implementation perceptron, single level neural network.","code":""},{"path":"https://paithiov909.github.io/baritsu/reference/details_mlp_baritsu.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Single level neural network via baritsu — details_mlp_baritsu","text":"engine, single mode: classification","code":""},{"path":"https://paithiov909.github.io/baritsu/reference/details_mlp_baritsu.html","id":"tuning-parameters","dir":"Reference","previous_headings":"","what":"Tuning Parameters","title":"Single level neural network via baritsu — details_mlp_baritsu","text":"model 1 tuning parameter: epochs: Maximum number iterations (type: integer)","code":""},{"path":"https://paithiov909.github.io/baritsu/reference/details_multinom_reg_baritsu.html","id":null,"dir":"Reference","previous_headings":"","what":"Multinomial regression via baritsu — details_multinom_reg_baritsu","title":"Multinomial regression via baritsu — details_multinom_reg_baritsu","text":"mlpack::softmax_regression() implementation softmax regression, generalization logistic regression multiclass case, support L2 regularization.","code":""},{"path":"https://paithiov909.github.io/baritsu/reference/details_multinom_reg_baritsu.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Multinomial regression via baritsu — details_multinom_reg_baritsu","text":"engine, single mode: classification","code":""},{"path":"https://paithiov909.github.io/baritsu/reference/details_multinom_reg_baritsu.html","id":"tuning-parameters","dir":"Reference","previous_headings":"","what":"Tuning Parameters","title":"Multinomial regression via baritsu — details_multinom_reg_baritsu","text":"model 1 tuning parameter: penalty: Amount Regularization (type: double)","code":""},{"path":"https://paithiov909.github.io/baritsu/reference/details_multinom_reg_baritsu.html","id":"preprocessing-requirements","dir":"Reference","previous_headings":"","what":"Preprocessing requirements","title":"Multinomial regression via baritsu — details_multinom_reg_baritsu","text":"Predictors scale. One way achieve center scale predictor mean zero variance one.","code":""},{"path":"https://paithiov909.github.io/baritsu/reference/details_naive_Bayes_baritsu.html","id":null,"dir":"Reference","previous_headings":"","what":"Naive Bayes models via baritsu — details_naive_Bayes_baritsu","title":"Naive Bayes models via baritsu — details_naive_Bayes_baritsu","text":"mlpack::nbc() implementation parametric Naive Bayes Classifier, used classification.","code":""},{"path":"https://paithiov909.github.io/baritsu/reference/details_naive_Bayes_baritsu.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Naive Bayes models via baritsu — details_naive_Bayes_baritsu","text":"engine, single mode: classification","code":""},{"path":"https://paithiov909.github.io/baritsu/reference/details_naive_Bayes_baritsu.html","id":"tuning-parameters","dir":"Reference","previous_headings":"","what":"Tuning Parameters","title":"Naive Bayes models via baritsu — details_naive_Bayes_baritsu","text":"engine tuning parameters.","code":""},{"path":"https://paithiov909.github.io/baritsu/reference/details_rand_forest_baritsu.html","id":null,"dir":"Reference","previous_headings":"","what":"Random forests via baritsu — details_rand_forest_baritsu","title":"Random forests via baritsu — details_rand_forest_baritsu","text":"mlpack::random_forest() implementation standard random forest algorithm Leo Breiman classification.","code":""},{"path":"https://paithiov909.github.io/baritsu/reference/details_rand_forest_baritsu.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Random forests via baritsu — details_rand_forest_baritsu","text":"engine, single mode: classification","code":""},{"path":"https://paithiov909.github.io/baritsu/reference/details_rand_forest_baritsu.html","id":"tuning-parameters","dir":"Reference","previous_headings":"","what":"Tuning Parameters","title":"Random forests via baritsu — details_rand_forest_baritsu","text":"model 3 tuning parameters: mtry: Randomly Selected Predictors (type: integer) trees: Trees (type: integer) min_n: Minimal Node Size (type: integer)","code":""},{"path":"https://paithiov909.github.io/baritsu/reference/details_svm_linear_baritsu.html","id":null,"dir":"Reference","previous_headings":"","what":"L2-regularized support vector machine via baritsu — details_svm_linear_baritsu","title":"L2-regularized support vector machine via baritsu — details_svm_linear_baritsu","text":"mlpack::linear_svm() implementation linear SVM multiclass classification.","code":""},{"path":"https://paithiov909.github.io/baritsu/reference/details_svm_linear_baritsu.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"L2-regularized support vector machine via baritsu — details_svm_linear_baritsu","text":"engine, single mode: classification","code":""},{"path":"https://paithiov909.github.io/baritsu/reference/details_svm_linear_baritsu.html","id":"tuning-parameters","dir":"Reference","previous_headings":"","what":"Tuning Parameters","title":"L2-regularized support vector machine via baritsu — details_svm_linear_baritsu","text":"engine 1 tuning parameter: margin: Insensitivity Margin (type: double)","code":""},{"path":"https://paithiov909.github.io/baritsu/reference/details_svm_linear_baritsu.html","id":"preprocessing-requirements","dir":"Reference","previous_headings":"","what":"Preprocessing requirements","title":"L2-regularized support vector machine via baritsu — details_svm_linear_baritsu","text":"Predictors centered scaled. One way achieve center scale predictor mean zero variance one.","code":""},{"path":"https://paithiov909.github.io/baritsu/reference/linear_regression.html","id":null,"dir":"Reference","previous_headings":"","what":"Linear regression — linear_regression","title":"Linear regression — linear_regression","text":"wrapper around mlpack::linear_regression() mlpack::lars() allows passing formula.","code":""},{"path":"https://paithiov909.github.io/baritsu/reference/linear_regression.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Linear regression — linear_regression","text":"","code":"linear_regression(   formula = NULL,   data = NULL,   lambda1 = 0,   lambda2 = 0,   no_intercept = FALSE,   no_normalize = FALSE,   use_cholesky = FALSE,   x = NULL,   y = NULL )"},{"path":"https://paithiov909.github.io/baritsu/reference/linear_regression.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Linear regression — linear_regression","text":"formula formula. Alternatively, recipe object can passed argument. recipe passed, data ignored. data data.frame. lambda1 Regularization parameter L1-norm penalty. lambda2 Regularization parameter L2-norm penalty. no_intercept Logical; passed mlpack::lars(). no_normalize Logical; passed mlpack::lars(). use_cholesky Logical; passed mlpack::lars(). x Design matrix. y Response matrix.","code":""},{"path":"https://paithiov909.github.io/baritsu/reference/linear_regression.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Linear regression — linear_regression","text":"object class baritsu_lr.","code":""},{"path":"https://paithiov909.github.io/baritsu/reference/linear_regression.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Linear regression — linear_regression","text":"lambda1 0, function fallbacks mlpack::linear_regression() performance.","code":""},{"path":[]},{"path":"https://paithiov909.github.io/baritsu/reference/linear_regression_bayesian.html","id":null,"dir":"Reference","previous_headings":"","what":"Bayesian linear regression — linear_regression_bayesian","title":"Bayesian linear regression — linear_regression_bayesian","text":"wrapper around mlpack::bayesian_linear_regression() allows passing formula.","code":""},{"path":"https://paithiov909.github.io/baritsu/reference/linear_regression_bayesian.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bayesian linear regression — linear_regression_bayesian","text":"","code":"linear_regression_bayesian(   formula = NULL,   data = NULL,   center = FALSE,   scale = FALSE,   x = NULL,   y = NULL )"},{"path":"https://paithiov909.github.io/baritsu/reference/linear_regression_bayesian.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bayesian linear regression — linear_regression_bayesian","text":"formula formula. Alternatively, recipe object can passed argument. recipe passed, data ignored. data data.frame. center Logical; enabled, centers data fits intercept. scale Logical; enabled, scales feature standard deviations. x Design matrix. y Response matrix.","code":""},{"path":"https://paithiov909.github.io/baritsu/reference/linear_regression_bayesian.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bayesian linear regression — linear_regression_bayesian","text":"object class baritsu_blr.","code":""},{"path":[]},{"path":"https://paithiov909.github.io/baritsu/reference/linear_svm.html","id":null,"dir":"Reference","previous_headings":"","what":"L2-regularized support vector machine — linear_svm","title":"L2-regularized support vector machine — linear_svm","text":"wrapper around mlpack::linear_svm() allows passing formula.","code":""},{"path":"https://paithiov909.github.io/baritsu/reference/linear_svm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"L2-regularized support vector machine — linear_svm","text":"","code":"linear_svm(   formula = NULL,   data = NULL,   margin = 1,   penalty = 1,   stop_iter = 1000,   no_intercept = FALSE,   tolerance = 1e-10,   optimizer = c(\"lbfgs\", \"psgd\"),   epochs = 50,   shuffle = FALSE,   step_size = 0.01,   seed = 0,   x = NULL,   y = NULL )"},{"path":"https://paithiov909.github.io/baritsu/reference/linear_svm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"L2-regularized support vector machine — linear_svm","text":"formula formula. Alternatively, recipe object can passed argument. recipe passed, data ignored. data data.frame. margin Margin difference correct class classes. penalty L2-regularization constant. stop_iter Maximum iterations optimizer (0 indicates limit). no_intercept Logical; passed mlpack::linear_svm(). tolerance Convergence tolerance optimizer. optimizer Optimizer use training (\"lbfgs\" \"psgd\"). epochs Maximum number full epochs dataset parallel SGD. shuffle Logical; true, shuffle order data points visited parallel SGD. step_size Step size parallel SGD optimizer. seed Random seed. 0, std::time(NULL) used internally. x Design matrix. y Response matrix.","code":""},{"path":"https://paithiov909.github.io/baritsu/reference/linear_svm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"L2-regularized support vector machine — linear_svm","text":"object class baritsu_svm.","code":""},{"path":[]},{"path":"https://paithiov909.github.io/baritsu/reference/naive_bayes.html","id":null,"dir":"Reference","previous_headings":"","what":"Parametric Naive Bayes Classifier — naive_bayes","title":"Parametric Naive Bayes Classifier — naive_bayes","text":"wrapper around mlpack::nbc() allows passing formula.","code":""},{"path":"https://paithiov909.github.io/baritsu/reference/naive_bayes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parametric Naive Bayes Classifier — naive_bayes","text":"","code":"naive_bayes(   formula = NULL,   data = NULL,   incremental_variance = FALSE,   x = NULL,   y = NULL )"},{"path":"https://paithiov909.github.io/baritsu/reference/naive_bayes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parametric Naive Bayes Classifier — naive_bayes","text":"formula formula. Alternatively, recipe object can passed argument. recipe passed, data ignored. data data.frame. incremental_variance Logical; passed mlpack::nbc(). x Design matrix. y Response matrix.","code":""},{"path":"https://paithiov909.github.io/baritsu/reference/naive_bayes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parametric Naive Bayes Classifier — naive_bayes","text":"object class baritsu_nbc.","code":""},{"path":[]},{"path":"https://paithiov909.github.io/baritsu/reference/parsnip_engines_baritsu.html","id":null,"dir":"Reference","previous_headings":"","what":"Parsnip engines in baritsu — parsnip_engines_baritsu","title":"Parsnip engines in baritsu — parsnip_engines_baritsu","text":"Parsnip engines baritsu","code":""},{"path":"https://paithiov909.github.io/baritsu/reference/parsnip_engines_baritsu.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Parsnip engines in baritsu — parsnip_engines_baritsu","text":"baritsu following parsnip engines: details_decision_tree_baritsu details_mlp_baritsu details_multinom_reg_baritsu details_naive_Bayes_baritsu details_rand_forest_baritsu details_svm_linear_baritsu details_lars_baritsu","code":""},{"path":"https://paithiov909.github.io/baritsu/reference/perceptron.html","id":null,"dir":"Reference","previous_headings":"","what":"Single level neural network — perceptron","title":"Single level neural network — perceptron","text":"wrapper around mlpack::perceptron() allows passing formula.","code":""},{"path":"https://paithiov909.github.io/baritsu/reference/perceptron.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Single level neural network — perceptron","text":"","code":"perceptron(formula = NULL, data = NULL, epochs = 100, x = NULL, y = NULL)"},{"path":"https://paithiov909.github.io/baritsu/reference/perceptron.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Single level neural network — perceptron","text":"formula formula. Alternatively, recipe object can passed argument. recipe passed, data ignored. data data.frame. epochs Maximum number iterations. x Design matrix. y Response matrix.","code":""},{"path":"https://paithiov909.github.io/baritsu/reference/perceptron.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Single level neural network — perceptron","text":"object class baritsu_prc.","code":""},{"path":[]},{"path":"https://paithiov909.github.io/baritsu/reference/predict.baritsu.html","id":null,"dir":"Reference","previous_headings":"","what":"Prediction using mlpack via baritsu — predict.baritsu","title":"Prediction using mlpack via baritsu — predict.baritsu","text":"Predicts new data using stored mlpack model.","code":""},{"path":"https://paithiov909.github.io/baritsu/reference/predict.baritsu.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prediction using mlpack via baritsu — predict.baritsu","text":"","code":"# S3 method for baritsu_dt predict(object, newdata, type = c(\"both\", \"class\", \"prob\"), ...)  # S3 method for baritsu_blr predict(object, newdata, ...)  # S3 method for baritsu_lr predict(object, newdata, ...)  # S3 method for baritsu_prc predict(object, newdata, ...)  # S3 method for baritsu_sr predict(object, newdata, type = c(\"both\", \"class\", \"prob\"), ...)  # S3 method for baritsu_nbc predict(object, newdata, type = c(\"both\", \"class\", \"prob\"), ...)  # S3 method for baritsu_rf predict(object, newdata, type = c(\"both\", \"class\", \"prob\"), ...)  # S3 method for baritsu_svm predict(object, newdata, type = c(\"both\", \"class\", \"prob\"), ...)"},{"path":"https://paithiov909.github.io/baritsu/reference/predict.baritsu.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prediction using mlpack via baritsu — predict.baritsu","text":"object object baritsu function. newdata data.frame. type Type prediction. One \"\", \"class\", \"prob\". ... used.","code":""},{"path":"https://paithiov909.github.io/baritsu/reference/predict.baritsu.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prediction using mlpack via baritsu — predict.baritsu","text":"tibble contains predictions /probabilities (also standard deviations predictive distribution predict.baritsu_blr).","code":""},{"path":"https://paithiov909.github.io/baritsu/reference/random_forest.html","id":null,"dir":"Reference","previous_headings":"","what":"Random forests — random_forest","title":"Random forests — random_forest","text":"wrapper around mlpack::random_forest() allows passing formula.","code":""},{"path":"https://paithiov909.github.io/baritsu/reference/random_forest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Random forests — random_forest","text":"","code":"random_forest(   formula = NULL,   data = NULL,   mtry = 0,   trees = 10,   min_n = 1,   maximum_depth = 0,   minimum_gain_split = 0,   seed = 0,   x = NULL,   y = NULL )"},{"path":"https://paithiov909.github.io/baritsu/reference/random_forest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Random forests — random_forest","text":"formula formula. Alternatively, recipe object can passed argument. recipe passed, data ignored. data data.frame. mtry Subspace dimension. 0, autoselects square root data dimensionality. trees Number trees. min_n Minimum number data points leaf. maximum_depth Maximum depth tree. minimum_gain_split Minimum gain required split internal node. seed Random seed. 0, std::time(NULL) used internally. x Design matrix. y Response matrix.","code":""},{"path":"https://paithiov909.github.io/baritsu/reference/random_forest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Random forests — random_forest","text":"object class baritsu_rf.","code":""},{"path":[]},{"path":"https://paithiov909.github.io/baritsu/reference/softmax_regression.html","id":null,"dir":"Reference","previous_headings":"","what":"Softmax regression — softmax_regression","title":"Softmax regression — softmax_regression","text":"wrapper around mlpack::softmax_regression() allows passing formula.","code":""},{"path":"https://paithiov909.github.io/baritsu/reference/softmax_regression.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Softmax regression — softmax_regression","text":"","code":"softmax_regression(   formula = NULL,   data = NULL,   penalty = 0.001,   stop_iter = 400,   no_intercept = FALSE,   x = NULL,   y = NULL )"},{"path":"https://paithiov909.github.io/baritsu/reference/softmax_regression.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Softmax regression — softmax_regression","text":"formula formula. Alternatively, recipe object can passed argument. recipe passed, data ignored. data data.frame. penalty L2-regularization constant. stop_iter Maximum number iterations. no_intercept Logical; passed mlpack::softmax_regression(). x Design matrix. y Response matrix.","code":""},{"path":"https://paithiov909.github.io/baritsu/reference/softmax_regression.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Softmax regression — softmax_regression","text":"object class baritsu_sr.","code":""},{"path":[]}]
